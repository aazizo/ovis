.\" Manpage for Plugin_darshan_stream_store
.\" Contact ovis-help@ca.sandia.gov to correct errors or typos.
.TH main 7 "26 September 2021" "v4" "LDMS Plugin darshan_stream_store man page"

.SH NAME
Plugin_darshan_stream_store - man page for the LDMS darshan_stream_store plugin

.SH SYNOPSIS
Within ldmsd_controller or a configuration file:
.br
config name=darshan_stream_store [ <attr>=<value> ] 

.SH DESCRIPTION
With LDMS (Lightweight Distributed Metric Service), plugins for the ldmsd (ldms daemon) are configured via ldmsd_controller or a configuration file. 
The darshan_stream_store plugin writes out either a single darshan JSON stream's data to the SOS container. The input data produced by the LDMS darshan plugin and consists of two types of messages "MOD" for module data and "MET for metadata. Both messages are saved into the same SOS container.

.SH CONFIGURATION ATTRIBUTE SYNTAX
.TP
.BR config
name=darshan_stream_store path=<path> stream=<stream> [mode=<mode>]
.br
configuration line
.RS
.TP
name=<plugin_name>
.br
This MUST be darshan_stream_store.
.TP
path=<path> 
.br
The path to the root of the SOS container store (should be created by the user)
.TP
stream=<stream>
.br
stream to which to subscribe.
.TP
mode=<mode>
.br
The container permission mode for create, (defaults to 0660).
.RE

.SH INPUT JSON FORMAT
.PP
The input JSON has a "type" field, which selects the message type between module data and metadata.
.PP
The reset of the fileds are darshan specific and shown in the example listed below:
.PP
{"job_id":6582,"rank":0,"ProducerName":"nid00021","file":"N/A","record_id":6222542600266098259,"module":"POSIX","type":"MOD","max_byte":16777215,"switches":0,"cnt":1,"op":"writes_segment_0","seg":[{"off":0,"len":16777216,"dur":0.16,"timestamp":1631904596.737955}]}
.PP
Some fields are set to -1, if they don't have data for that message type.
.PP



.SH BUGS
No known bugs.

.SH NOTES
.PP
This store is in development and may be changed at any time.
.PP
Only supports one stream


.SH EXAMPLES
.PP
Within ldmsd_controller or a configuration file:
.nf
load name=darshan_stream_store
config name=darshan_stream_store path=/tmp/darshan_stream stream=darshanConnector
# dont call anything else on the store...

# how does it know which producer the subscribe is part of?
prdcr_add name=localhost1 host=localhost type=active xprt=sock port=52001 interval=20000000
prdcr_subscribe stream=darshanConnector regex=localhost*
prdcr_start name=localhost1
.fi


.SH SEE ALSO
ldmsd(8), ldms_quickstart(7), ldmsd_controller(8), ldms_sampler_base(7), darshan_publisher, darshan_sampler, parser.pl (has perlpod), Plugin_darshan_cat_publisher(7)
